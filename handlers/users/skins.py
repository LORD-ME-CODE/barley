from aiogram.types import Message, CallbackQuery, InputMediaPhoto, InputMedia

from config import bot_name
from utils.main.cash import to_str
from utils.main.users import User
from keyboard.skins import skin_buy_kb, skin_kb
from utils.photos.photos import set_photo, get_photo


class Skin:
    def __init__(self, name: str, price: int, ids: int, sex: str):
        self.id = ids
        self.name = name
        self.price = price
        self.img = 'skins/' + str(self.id)
        self.sex = sex

    def image(self, fide: str = ''):
        if fide:
            fide = '_' + fide
        return get_photo(self.img + fide + '.png')

    def set_image(self, value, fide: str = ''):
        if fide:
            fide = '_' + fide
        set_photo(self.img + fide + '.png', value)

    @property
    def text(self):
        return f'üî¢ –ù–æ–º–µ—Ä —Å–∫–∏–Ω–∞: <code>{self.id}</code>\n' \
               f'üëî –ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–∏–Ω–∞: <b>{self.name}</b>\n' \
               f'üí∞ –¶–µ–Ω–∞: {to_str(self.price)}'


skins = {
    1: Skin('Noel', 165000, 1, 'girl'),
    2: Skin('Amber', 2500000, 2, 'girl'),
    3: Skin('Annie', 5000000, 3, 'girl'),
    4: Skin('Rikka', 10000000, 4, 'girl'),
    5: Skin('RinTohsaka', 20000000, 5, 'girl'),
}

girls = [1, 2, 3, 4, 5]
boys = []


async def skins_handler(message: Message):
    arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[0].lower() else message.text.split()[2:]
    user = User(user=message.from_user)
    if (not user.skin and len(arg) == 0) or (len(arg) == 1 and arg[0].lower() in ['—Å–∫–∏–Ω—ã', '–≤—Å–µ',
                                                                                    '—Å–ø–∏—Å–æ–∫', '–∫—É–ø–∏—Ç—å']) or (len(arg)
                                == 1 and arg[0].lower() in ['girl', 'girls', '—Ç—è–Ω', '—Ç—è–Ω–æ—á–∫–∏',
                                                            '—Ç—è–Ω–∫–∏', '–¥–µ–≤–∫–∏', '–¥–µ–≤–∫–∞', '–¥–µ–≤–æ—á–∫–∏',
                                                            '–¥–µ–≤—É—à–∫–∏', '–∂–µ–Ω—â–∏–Ω—ã',
                                                            'boys', 'boy', '–∫—É–Ω', '–∫—É–Ω—á–∏–∫–∏',
                                                            '–º–∞–ª—å—á–∏–∫–∏', '–ø–∞—Ü–∞–Ω—ã', '–º—É–∂–∏–∫–∏',
                                                            '–ø–∞—Ä–Ω–∏']):
        text = 'üëò –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∫–∏–Ω–æ–≤:\n\n'
        x = boys if len(arg) >= 1 and arg[0].lower() in ['boys', 'boy', '–∫—É–Ω', '–∫—É–Ω—á–∏–∫–∏',
                                                          '–º–∞–ª—å—á–∏–∫–∏', '–ø–∞—Ü–∞–Ω—ã', '–º—É–∂–∏–∫–∏',
                                                          '–ø–∞—Ä–Ω–∏'] else girls
        skinss = [(i, skins[i]) for i in x]
        index = None
        for index, skin in skinss:
            text += f'{index}. <b>{skin.name}</b> - {to_str(skin.price)}\n'
        if not index:
            text += '‚õî –°–∫–∏–Ω–æ–≤ –Ω–µ—Ç'
        text += '\n\n' \
                '–í–≤–µ–¥–∏—Ç–µ: <code>–°–∫–∏–Ω —Å–º–æ—Ç—Ä–µ—Ç—å {–Ω–æ–º–µ—Ä}</code> –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞\n' \
                '–í–≤–µ–¥–∏—Ç–µ: <code>–°–∫–∏–Ω –∫—É–ø–∏—Ç—å {–Ω–æ–º–µ—Ä}</code> –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Å–∫–∏–Ω–∞'

        return await message.reply(text, reply_markup=skin_buy_kb)
    elif len(arg) > 1 and arg[0].lower() in ['–ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä', '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å',
                                              '—á–µ–∫–Ω—É—Ç—å', '—Ñ–æ—Ç–æ', '—Å–∫—Ä–∏–Ω',
                                              '—Å–º–æ—Ç—Ä–µ—Ç—å']:
        try:
            index = int(arg[1])
        except:
            return await message.reply('üö´ –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Å–∫–∏–Ω–∞!')

        if index not in skins:
            return await message.reply('üö´ –ù–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–∫–∏–Ω–∞!')

        skin = skins[index]
        msg = await message.reply_photo(photo=skin.image(),
                                         caption=skin.text,
                                         reply_markup=skin_kb(user.id, index))
        skin.set_image(msg.photo[0].file_id)

    elif len(arg) > 1 and arg[0].lower() in ['–ø–æ–∫—É–ø–∫–∞', '–∫—É–ø–∏—Ç—å',
                                              '–ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏', '–ø–æ—Å—Ç–∞–≤–∏—Ç—å']:
        try:
            index = int(arg[1])
        except:
            return await message.reply('üö´ –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Å–∫–∏–Ω–∞!')

        if index not in skins:
            return await message.reply('üö´ –ù–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–∫–∏–Ω–∞!')

        skin = skins[index]

        if user.balance < skin.price:
            return await message.reply('üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏!\n'
                                       '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ: {}'.format(to_str(skin.price)))

        user.editmany(balance=user.balance - skin.price, skin=skin.id)

        msg = await message.reply_photo(photo=skin.image(),
                                         caption=skin.text,
                                         reply_markup=skin_kb(user.id, index))
        skin.set_image(msg.photo[0].file_id)
    else:
        skin = skins[user.skin] if user.skin else None
        if skin is None:
            return await message.reply('‚õî –£ –≤–∞—Å –Ω–µ—Ç —Å–∫–∏–Ω–∞!')
        msg = await message.reply_photo(photo=skin.image(),
                                         caption='ü•∞ <b>–í–∞—à —Å–∫–∏–Ω</b>:\n' + skin.text,
                                         reply_markup=skin_kb(user.id, user.skin))
        skin.set_image(msg.photo[0].file_id)


async def skin_call(call: CallbackQuery):
    data = call.data.split('_')
    index = int(data[1])
    user_id = int(data[2])
    if user_id != call.from_user.id:
        return await call.answer('üö´ –≠—Ç–æ –Ω–µ –≤–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞!')
    action = data[3]
    user = User(user=call.from_user)
    skin = skins[index]
    text = f'ü•∞ <b>–í–∞—à —Å–∫–∏–Ω</b>:\n{skin.text}' if index == user.skin else skin.text
    img = action if action != "front" else ""
    media = InputMedia(type="photo", media=skin.image(img),
                       caption=text)
    try:
        msg = await call.message.edit_media(media=media,
                                            reply_markup=skin_kb(user.id, user.skin))
        skin.set_image(msg.photo[-1].file_id, img)
    except:
        return
